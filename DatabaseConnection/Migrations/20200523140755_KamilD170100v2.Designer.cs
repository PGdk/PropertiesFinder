// <auto-generated />
using System;
using DatabaseConnection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatabaseConnection.Migrations
{
    [DbContext(typeof(GazetaKrakowskaContext))]
    [Migration("20200523140755_KamilD170100v2")]
    partial class KamilD170100v2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DatabaseConnection.EntryDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("OfferDetailsId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PropertyAddressId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PropertyDetailsId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PropertyFeaturesId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PropertyPriceId")
                        .HasColumnType("bigint");

                    b.Property<string>("RawDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OfferDetailsId");

                    b.HasIndex("PropertyAddressId");

                    b.HasIndex("PropertyDetailsId");

                    b.HasIndex("PropertyFeaturesId");

                    b.HasIndex("PropertyPriceId");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("DatabaseConnection.Logs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("XRequestId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("DatabaseConnection.OfferDetailsDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsStillValid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OfferKind")
                        .HasColumnType("int");

                    b.Property<long?>("SellerContactId")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SellerContactId");

                    b.ToTable("OfferDetailsDb");
                });

            modelBuilder.Entity("DatabaseConnection.PropertyAddressDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<string>("DetailedAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PropertyAddressDb");
                });

            modelBuilder.Entity("DatabaseConnection.PropertyDetailsDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRooms")
                        .HasColumnType("int");

                    b.Property<int?>("YearOfConstruction")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PropertyDetailsDb");
                });

            modelBuilder.Entity("DatabaseConnection.PropertyFeaturesDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Balconies")
                        .HasColumnType("int");

                    b.Property<decimal?>("BasementArea")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GardenArea")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("IndoorParkingPlaces")
                        .HasColumnType("int");

                    b.Property<int?>("OutdoorParkingPlaces")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PropertyFeaturesDb");
                });

            modelBuilder.Entity("DatabaseConnection.PropertyPriceDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("PricePerMeter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ResidentalRent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalGrossPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PropertyPriceDb");
                });

            modelBuilder.Entity("DatabaseConnection.SellerContactDb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SellerContactDb");
                });

            modelBuilder.Entity("DatabaseConnection.EntryDb", b =>
                {
                    b.HasOne("DatabaseConnection.OfferDetailsDb", "OfferDetails")
                        .WithMany()
                        .HasForeignKey("OfferDetailsId");

                    b.HasOne("DatabaseConnection.PropertyAddressDb", "PropertyAddress")
                        .WithMany()
                        .HasForeignKey("PropertyAddressId");

                    b.HasOne("DatabaseConnection.PropertyDetailsDb", "PropertyDetails")
                        .WithMany()
                        .HasForeignKey("PropertyDetailsId");

                    b.HasOne("DatabaseConnection.PropertyFeaturesDb", "PropertyFeatures")
                        .WithMany()
                        .HasForeignKey("PropertyFeaturesId");

                    b.HasOne("DatabaseConnection.PropertyPriceDb", "PropertyPrice")
                        .WithMany()
                        .HasForeignKey("PropertyPriceId");
                });

            modelBuilder.Entity("DatabaseConnection.OfferDetailsDb", b =>
                {
                    b.HasOne("DatabaseConnection.SellerContactDb", "SellerContact")
                        .WithMany()
                        .HasForeignKey("SellerContactId");
                });
#pragma warning restore 612, 618
        }
    }
}
