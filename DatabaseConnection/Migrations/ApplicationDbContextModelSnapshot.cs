// <auto-generated />
using System;
using DatabaseConnection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatabaseConnection.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DatabaseConnection.Models.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HeaderValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Models.Entry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RawDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("Models.Entry", b =>
                {
                    b.OwnsOne("Models.OfferDetails", "OfferDetails", b1 =>
                        {
                            b1.Property<long>("EntryId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("CreationDateTime")
                                .HasColumnType("datetime2");

                            b1.Property<bool>("IsStillValid")
                                .HasColumnType("bit");

                            b1.Property<DateTime?>("LastUpdateDateTime")
                                .HasColumnType("datetime2");

                            b1.Property<int>("OfferKind")
                                .HasColumnType("int");

                            b1.Property<string>("Url")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("EntryId");

                            b1.ToTable("Entries");

                            b1.WithOwner()
                                .HasForeignKey("EntryId");

                            b1.OwnsOne("Models.SellerContact", "SellerContact", b2 =>
                                {
                                    b2.Property<long>("OfferDetailsEntryId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("bigint")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Email")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Name")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Telephone")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("OfferDetailsEntryId");

                                    b2.ToTable("Entries");

                                    b2.WithOwner()
                                        .HasForeignKey("OfferDetailsEntryId");
                                });
                        });

                    b.OwnsOne("Models.PropertyAddress", "PropertyAddress", b1 =>
                        {
                            b1.Property<long>("EntryId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("City")
                                .HasColumnType("int");

                            b1.Property<string>("DetailedAddress")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("District")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StreetName")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("EntryId");

                            b1.ToTable("Entries");

                            b1.WithOwner()
                                .HasForeignKey("EntryId");
                        });

                    b.OwnsOne("Models.PropertyDetails", "PropertyDetails", b1 =>
                        {
                            b1.Property<long>("EntryId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("Area")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("BuldingType")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("FloorNumber")
                                .HasColumnType("int");

                            b1.Property<int>("NumberOfFloors")
                                .HasColumnType("int");

                            b1.Property<int>("NumberOfRooms")
                                .HasColumnType("int");

                            b1.Property<int?>("YearOfConstruction")
                                .HasColumnType("int");

                            b1.HasKey("EntryId");

                            b1.ToTable("Entries");

                            b1.WithOwner()
                                .HasForeignKey("EntryId");
                        });

                    b.OwnsOne("Models.PropertyFeatures", "PropertyFeatures", b1 =>
                        {
                            b1.Property<long>("EntryId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int?>("Balconies")
                                .HasColumnType("int");

                            b1.Property<int?>("BalconyArea")
                                .HasColumnType("int");

                            b1.Property<decimal?>("BasementArea")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal?>("GardenArea")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<bool>("HasBalcony")
                                .HasColumnType("bit");

                            b1.Property<bool>("HasBasementArea")
                                .HasColumnType("bit");

                            b1.Property<bool>("HasElevator")
                                .HasColumnType("bit");

                            b1.Property<int?>("IndoorParkingPlaces")
                                .HasColumnType("int");

                            b1.Property<bool?>("IsPrimaryMarket")
                                .HasColumnType("bit");

                            b1.Property<int?>("OutdoorParkingPlaces")
                                .HasColumnType("int");

                            b1.Property<int?>("ParkingPlaces")
                                .HasColumnType("int");

                            b1.HasKey("EntryId");

                            b1.ToTable("Entries");

                            b1.WithOwner()
                                .HasForeignKey("EntryId");
                        });

                    b.OwnsOne("Models.PropertyPrice", "PropertyPrice", b1 =>
                        {
                            b1.Property<long>("EntryId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<bool>("NegotiablePrice")
                                .HasColumnType("bit");

                            b1.Property<decimal>("PricePerMeter")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal?>("ResidentalRent")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("TotalGrossPrice")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("EntryId");

                            b1.ToTable("Entries");

                            b1.WithOwner()
                                .HasForeignKey("EntryId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
